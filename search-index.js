var searchIndex = JSON.parse('{\
"ray_tracing":{"doc":"Ray tracing utilities.","i":[[0,"camera","ray_tracing","Virtual camera.",null,null],[3,"Camera","ray_tracing::camera","",null,null],[11,"get_ray","","",0,[[["f64",15]],["ray",3]]],[0,"color","ray_tracing","RGB color type.",null,null],[6,"Rgb","ray_tracing::color","RGB color data.",null,null],[11,"write","","",1,[[["i32",15]],["result",6]]],[0,"consts","ray_tracing","Definitions of math constants.",null,null],[17,"INIFINTY","ray_tracing::consts","",null,null],[17,"PI","","",null,null],[0,"error","ray_tracing","Error types, basically [<code>Result</code>] and [<code>ErrorKind</code>].",null,null],[6,"Result","ray_tracing::error","A type alias for <code>Result</code><T, [<code>enum@ErrorKind</code>]>.",null,null],[4,"ErrorKind","","The concrete type of an error.",null,null],[13,"WriteColor","","Cannot write pixel color values into a writer.",2,null],[13,"Io","","Represents an <code>I/O error</code>.",2,null],[0,"hittable","ray_tracing","[<code>Hittable</code>]s and [<code>HitRecord</code>] type.",null,null],[8,"Hittable","ray_tracing::hittable","A hittable object that a ray can intersect with.",null,null],[10,"hit","","",3,[[["f64",15],["ray",3]],[["option",4],["hitrecord",3]]]],[3,"HitRecord","","A record that contains the information of a hit.",null,null],[12,"p","","",4,null],[12,"t","","",4,null],[12,"normal","","",4,null],[12,"material","","",4,null],[12,"front_face","","",4,null],[11,"new","","",4,[[["f64",15],["option",4],["material",8],["point3",6]]]],[11,"set_face_normal","","",4,[[["vec3",6],["ray",3]]]],[3,"HittableList","","A list of hittable objects.",null,null],[11,"new","","",5,[[]]],[11,"add","","",5,[[]]],[11,"clear","","",5,[[]]],[0,"prelude","ray_tracing","Convenient re-exports of common items.",null,null],[0,"ray","","The [<code>Ray</code>] type.",null,null],[3,"Ray","ray_tracing::ray","Rays in the 3D space.",null,null],[12,"origin","","",6,null],[12,"direction","","",6,null],[11,"new","","",6,[[["vec3",6],["point3",6]]]],[11,"at","","",6,[[["f64",15]],["point3",6]]],[0,"sphere","ray_tracing","3D hittable [<code>Sphere</code>]s.",null,null],[3,"Sphere","ray_tracing::sphere","",null,null],[12,"center","","",7,null],[12,"radius","","",7,null],[12,"material","","",7,null],[11,"new","","",7,[[["f64",15],["point3",6]]]],[5,"hit_sphere","","Checks if a ray hit a sphere.",null,[[["f64",15],["ray",3],["point3",6]],["f64",15]]],[0,"util","ray_tracing","Utility functions.",null,null],[5,"random_f64","ray_tracing::util","Generates a random number within range [0, 1).",null,[[],["f64",15]]],[5,"random_f64_within","","Generates a random number within range [min, max).",null,[[["f64",15]],["f64",15]]],[5,"degrees_to_radians","","Converts degrees to radians.",null,[[["f64",15]],["f64",15]]],[0,"vec","ray_tracing","3D Vector types, such as [<code>Vec3</code>] and [<code>Point3</code>].",null,null],[0,"raw","ray_tracing::vec","Generic raw vector types.",null,null],[8,"Scalar","ray_tracing::vec::raw","Types that can be served as scalar values in vector space.",null,null],[10,"sqrt","","",8,[[]]],[10,"zero","","",8,[[]]],[3,"Vec2d","","A 2D spatial vector type.",null,null],[12,"x","","",9,null],[12,"y","","",9,null],[3,"Vec3d","","A 3D spatial vector type.",null,null],[12,"x","","",10,null],[12,"y","","",10,null],[12,"z","","",10,null],[3,"Vec4d","","A 4D spatial vector type.",null,null],[12,"x","","",11,null],[12,"y","","",11,null],[12,"z","","",11,null],[12,"w","","",11,null],[11,"new","","",9,[[]]],[11,"count","","",9,[[],["usize",15]]],[11,"map","","",9,[[],["vec2d",3]]],[11,"sum","","",9,[[]]],[11,"dot","","",9,[[]]],[11,"len_squared","","",9,[[]]],[11,"len","","",9,[[]]],[11,"normal","","",9,[[]]],[11,"normalize","","",9,[[]]],[11,"new","","",10,[[]]],[11,"count","","",10,[[],["usize",15]]],[11,"map","","",10,[[],["vec3d",3]]],[11,"sum","","",10,[[]]],[11,"dot","","",10,[[]]],[11,"len_squared","","",10,[[]]],[11,"len","","",10,[[]]],[11,"normal","","",10,[[]]],[11,"normalize","","",10,[[]]],[11,"new","","",11,[[]]],[11,"count","","",11,[[],["usize",15]]],[11,"map","","",11,[[],["vec4d",3]]],[11,"sum","","",11,[[]]],[11,"dot","","",11,[[]]],[11,"len_squared","","",11,[[]]],[11,"len","","",11,[[]]],[11,"normal","","",11,[[]]],[11,"normalize","","",11,[[]]],[11,"cross","","",10,[[]]],[3,"Vec3d","ray_tracing::vec","A 3D generic vector type.",null,null],[12,"x","","",12,null],[12,"y","","",12,null],[12,"z","","",12,null],[3,"Color","","RGB color data.",null,null],[12,"r","","",13,null],[12,"g","","",13,null],[12,"b","","",13,null],[11,"new","","",12,[[]]],[11,"count","","",12,[[],["usize",15]]],[11,"map","","",12,[[],["vec3d",3]]],[11,"sum","","",12,[[]]],[11,"dot","","",12,[[]]],[11,"len_squared","","",12,[[]]],[11,"len","","",12,[[]]],[11,"normal","","",12,[[]]],[11,"normalize","","",12,[[]]],[11,"cross","","",12,[[]]],[11,"new","","",13,[[]]],[11,"count","","",13,[[],["usize",15]]],[11,"map","","",13,[[],["color",3]]],[11,"sum","","",13,[[]]],[11,"dot","","",13,[[]]],[11,"len_squared","","",13,[[]]],[11,"len","","",13,[[]]],[11,"normal","","",13,[[]]],[11,"normalize","","",13,[[]]],[11,"cross","","",13,[[]]],[6,"Vec3","","Represents vectors in the 3D spatial space.",null,null],[6,"Point3","","Represents points in the 3D spatial space.",null,null],[11,"random","","",12,[[]]],[11,"random_within","","",12,[[["f64",15],["range",3]]]],[11,"random_in_unit_sphere","","",12,[[]]],[11,"random_in_unit_hemisphere","","",12,[[["vec3",6]]]],[11,"random_unit_vector","","",12,[[]]],[11,"near_zero","","Checks if the vector is close to zero in all dimensions.",12,[[],["bool",15]]],[11,"reflect","","",12,[[["vec3",6]],["vec3",6]]],[11,"random","","",14,[[]]],[11,"random_within","","",14,[[["f64",15],["range",3]]]],[11,"random_in_unit_sphere","","",14,[[]]],[11,"random_in_unit_hemisphere","","",14,[[["vec3",6]]]],[11,"random_unit_vector","","",14,[[]]],[11,"near_zero","","Checks if the vector is close to zero in all dimensions.",14,[[],["bool",15]]],[11,"reflect","","",14,[[["vec3",6]],["vec3",6]]],[0,"material","ray_tracing","Materials.",null,null],[8,"Material","ray_tracing::material","",null,null],[10,"scatter","","",15,[[["hitrecord",3],["ray",3]],["option",4]]],[3,"Lambertian","","",null,null],[11,"new","","",16,[[["rgb",6]],["lambertian",3]]],[3,"Metal","","",null,null],[11,"new","","",17,[[["f64",15],["rgb",6]]]],[14,"impl_vec_common","ray_tracing","Implements common traits and methods for a given vector.",null,null],[14,"impl_vec_specific","","Implements dimension-specific methods for a given vector.",null,null],[14,"v3","","A convenient macro to generate Vec3.",null,null],[14,"p3","","A convenient macro to generate Point3.",null,null],[14,"rgb","","A convenient macro to generate Rgb.",null,null],[11,"from","ray_tracing::camera","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","ray_tracing::error","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","ray_tracing::hittable","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","ray_tracing::ray","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","ray_tracing::sphere","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","ray_tracing::vec::raw","",9,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","ray_tracing::vec","",12,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","ray_tracing::material","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"hit","ray_tracing::hittable","",5,[[["f64",15],["ray",3]],[["option",4],["hitrecord",3]]]],[11,"hit","ray_tracing::sphere","",7,[[["f64",15],["ray",3]],[["option",4],["hitrecord",3]]]],[11,"scatter","ray_tracing::material","",16,[[["hitrecord",3],["ray",3]],["option",4]]],[11,"scatter","","",17,[[["hitrecord",3],["ray",3]],["option",4]]],[11,"from","ray_tracing","",1,[[["vec3",6]]]],[11,"from","ray_tracing::error","",2,[[["ioerror",3]]]],[11,"from","ray_tracing::vec::raw","",9,[[],["vec2d",3]]],[11,"from","","",9,[[]]],[11,"from","","",9,[[]]],[11,"from","","",10,[[],["vec3d",3]]],[11,"from","","",10,[[]]],[11,"from","","",10,[[]]],[11,"from","","",11,[[],["vec4d",3]]],[11,"from","","",11,[[]]],[11,"from","","",11,[[]]],[11,"from","ray_tracing::vec","",12,[[],["vec3d",3]]],[11,"from","","",12,[[]]],[11,"from","","",12,[[]]],[11,"from","","",13,[[],["color",3]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[]]],[11,"into","ray_tracing","",1,[[],["vec3",6]]],[11,"into","ray_tracing::vec::raw","",9,[[]]],[11,"into","","",9,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into","ray_tracing::vec","",12,[[]]],[11,"into","","",12,[[]]],[11,"into","","",13,[[]]],[11,"into","","",13,[[]]],[11,"clone","ray_tracing::ray","",6,[[],["ray",3]]],[11,"clone","ray_tracing::vec::raw","",9,[[],["vec2d",3]]],[11,"clone","","",10,[[],["vec3d",3]]],[11,"clone","","",11,[[],["vec4d",3]]],[11,"clone","ray_tracing::vec","",12,[[],["vec3d",3]]],[11,"clone","","",13,[[],["color",3]]],[11,"clone","ray_tracing::material","",16,[[],["lambertian",3]]],[11,"clone","","",17,[[],["metal",3]]],[11,"default","ray_tracing::camera","",0,[[]]],[11,"default","ray_tracing::sphere","",7,[[],["sphere",3]]],[11,"default","ray_tracing::vec::raw","",9,[[],["vec2d",3]]],[11,"default","","",10,[[],["vec3d",3]]],[11,"default","","",11,[[],["vec4d",3]]],[11,"default","ray_tracing::vec","",12,[[],["vec3d",3]]],[11,"default","","",13,[[],["color",3]]],[11,"eq","ray_tracing::vec::raw","",9,[[["vec2d",3]],["bool",15]]],[11,"ne","","",9,[[["vec2d",3]],["bool",15]]],[11,"eq","","",10,[[["vec3d",3]],["bool",15]]],[11,"ne","","",10,[[["vec3d",3]],["bool",15]]],[11,"eq","","",11,[[["vec4d",3]],["bool",15]]],[11,"ne","","",11,[[["vec4d",3]],["bool",15]]],[11,"eq","ray_tracing::vec","",12,[[["vec3d",3]],["bool",15]]],[11,"ne","","",12,[[["vec3d",3]],["bool",15]]],[11,"eq","","",13,[[["color",3]],["bool",15]]],[11,"ne","","",13,[[["color",3]],["bool",15]]],[11,"fmt","ray_tracing::error","",2,[[["formatter",3]],["result",6]]],[11,"fmt","ray_tracing::hittable","",4,[[["formatter",3]],["result",6]]],[11,"fmt","ray_tracing::ray","",6,[[["formatter",3]],["result",6]]],[11,"fmt","ray_tracing::sphere","",7,[[["formatter",3]],["result",6]]],[11,"fmt","ray_tracing::vec::raw","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","ray_tracing::vec","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","ray_tracing::material","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","ray_tracing::error","",2,[[["formatter",3]],["result",6]]],[11,"fmt","ray_tracing::vec","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"div","ray_tracing::vec::raw","",9,[[]]],[11,"div","","",10,[[]]],[11,"div","","",11,[[]]],[11,"div","ray_tracing::vec","",12,[[]]],[11,"div","","",13,[[]]],[11,"sub","ray_tracing::vec::raw","",9,[[]]],[11,"sub","","",10,[[]]],[11,"sub","","",11,[[]]],[11,"sub","ray_tracing::vec","",12,[[]]],[11,"sub","","",13,[[]]],[11,"add","ray_tracing::vec::raw","",9,[[]]],[11,"add","","",10,[[]]],[11,"add","","",11,[[]]],[11,"add","ray_tracing::vec","",12,[[]]],[11,"add","","",13,[[]]],[11,"mul","ray_tracing::vec::raw","",9,[[]]],[11,"mul","","",10,[[]]],[11,"mul","","",11,[[]]],[11,"mul","ray_tracing::vec","",12,[[]]],[11,"mul","","",13,[[]]],[11,"neg","ray_tracing::vec::raw","",9,[[]]],[11,"neg","","",10,[[]]],[11,"neg","","",11,[[]]],[11,"neg","ray_tracing::vec","",12,[[]]],[11,"neg","","",13,[[]]],[11,"add_assign","ray_tracing::vec::raw","",9,[[]]],[11,"add_assign","","",10,[[]]],[11,"add_assign","","",11,[[]]],[11,"add_assign","ray_tracing::vec","",12,[[]]],[11,"add_assign","","",13,[[]]],[11,"sub_assign","ray_tracing::vec::raw","",9,[[]]],[11,"sub_assign","","",10,[[]]],[11,"sub_assign","","",11,[[]]],[11,"sub_assign","ray_tracing::vec","",12,[[]]],[11,"sub_assign","","",13,[[]]],[11,"mul_assign","ray_tracing::vec::raw","",9,[[]]],[11,"mul_assign","","",10,[[]]],[11,"mul_assign","","",11,[[]]],[11,"mul_assign","ray_tracing::vec","",12,[[]]],[11,"mul_assign","","",13,[[]]],[11,"div_assign","ray_tracing::vec::raw","",9,[[]]],[11,"div_assign","","",10,[[]]],[11,"div_assign","","",11,[[]]],[11,"div_assign","ray_tracing::vec","",12,[[]]],[11,"div_assign","","",13,[[]]],[11,"source","ray_tracing::error","",2,[[],[["option",4],["error",8]]]],[11,"write","ray_tracing::vec","",13,[[["i32",15]],["result",6]]]],"p":[[3,"Camera"],[6,"Rgb"],[4,"ErrorKind"],[8,"Hittable"],[3,"HitRecord"],[3,"HittableList"],[3,"Ray"],[3,"Sphere"],[8,"Scalar"],[3,"Vec2d"],[3,"Vec3d"],[3,"Vec4d"],[3,"Vec3d"],[3,"Color"],[6,"Vec3"],[8,"Material"],[3,"Lambertian"],[3,"Metal"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);